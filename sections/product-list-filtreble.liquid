{%- style -%}
.section-{{ section.id }} {
  background: {% if section.settings.background_image %}
              url("{{ section.settings.background_image | image_url }}"),
              {% endif %}
              {{ section.settings.background_color }};
  background-repeat: no-repeat;
  background-position: top center;
  padding: {{ section.settings.section_padding }}px 0;
}
.add-text-wrap:before {
  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, {{ section.settings.tint_color }} 100%);
  opacity: {{ section.settings.tint_opacity }}%;
}
.add-text-wrap .add-text-content p {
  color: {{ section.settings.add_color }};
  font-size: calc( {{ section.settings.add_font_size_mobile }}px );
  line-height: calc({{ section.settings.add_font_size_mobile }}px * 1.2);
}
.add-text-wrap .add-text-content a {
  color: {{ section.settings.add_color }};
}
.product-list {
  margin-bottom: 30px;
}
@media only screen and (min-width: 640px) {
  .add-text-wrap .add-text-content p {
    font-size: calc( {{ section.settings.add_font_size }}px );
    line-height: calc({{ section.settings.add_font_size }}px * 1.2);
  }
  .section-{{ section.id }} .product-list {
    column-gap: {{ section.settings.product_gap }}px;
  }
  .section-{{ section.id }} .product-list .product-list-item {
    position: relative;
    flex: 0 0 calc(calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 1))) / {{ section.settings.item_per_row }}));
  }
  .section-{{ section.id }} .product-list .product-list-item.add {
    position: relative;
    flex: 0 0 calc(calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 1))) / {{ section.settings.item_per_row }}));
  }
  .add-size-2 {
    flex: 0 0 calc((calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 2))) / {{ section.settings.item_per_row }})) * 2) !important;
  }
  .add-size-3 {
    flex: 0 0 calc((calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 3))) / {{ section.settings.item_per_row }})) * 3) !important;
  }
  .add-size-4 {
    flex: 0 0 calc((calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 4))) / {{ section.settings.item_per_row }})) * 4) !important;
  }
  .add-size-5 {
    flex: 0 0 calc((calc((100% - calc({{ section.settings.product_gap }}px * calc({{ section.settings.item_per_row }} - 5))) / {{ section.settings.item_per_row }})) * 5) !important;
  }
}
{%- endstyle -%}
{{ 'product-grid.css' | asset_url | stylesheet_tag }}
<script id="ajaxinate" src="{{ 'ajaxinate.js' | asset_url }}" defer></script>
<script id="filter" src="{{ 'filter.js' | asset_url }}" defer></script>

<div class="product-list section-{{ section.id }}">
  {% unless section.settings.full_width %}
  <div class="wide-width">
  {% endunless %}

  {% if collection.all_products_count != 0 %}

  {% if section.settings.heading != blank %}
    <h2>{{ section.settings.heading }}</h2>
  {% endif %}
  <div class="collection-filters">
      <div class="active-filters">
          <span class="filters-toggle">
              {%- render 'icon-filter' -%}
              <span class="hidden-mobile">Show Filter</span>
          </span>        
          {%- for filter in collection.filters -%}
            {%- if filter.type == "price_range" -%}
                {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
                <a class="active-filters__remove-filter" href="{{ filter.url_to_remove }}">
                  {%- assign min_value = filter.min_value.value | default: 0 -%}
                  {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
                  {{ min_value | money }} - {{ max_value | money }} {% render 'icon-close' %}
                </a>
                {%- endif -%}
            {%- else -%}
                {%- for filter_value in filter.active_values -%}
                <a class="active-filters__remove-filter" href="{{ filter_value.url_to_remove }}">
                  {{ filter.label }}: {{ filter_value.label }} {% render 'icon-close' %}
                </a>
                {%- endfor -%}
            {% endif %}
          {% endfor %}
      </div>
      <select id="sort-by">
        {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
        {% for option in collection.sort_options %}
          <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
            {{ option.name }}
          </option>
        {% endfor %}
      </select>
      <script id="sort-by" src="{{ 'sort-by.js' | asset_url }}" defer></script>  
  </div>
  {%liquid
    assign productPerRow = section.settings.item_per_row
    assign rowPerpage = section.settings.item_show_row
    assign productperpage = productPerRow | times: rowPerpage
  %}
    {% paginate collection.products by productperpage %}
      <div class="product-list full-on-mobile column-{{ section.settings.item_per_row }} column-mobile-{{ section.settings.item_per_row_mobile }} image-size-{{- section.settings.image_size }} image-fit-{{- section.settings.image_fit }} image-pos-{{- section.settings.image_pos -}}" id="AjaxinateContainer">
        {% for product in collection.products %}
          {% for block in section.blocks %}
            {% case block.type %}
              {%- when 'add_add' -%}

                {% if forloop.parentloop.index == block.settings.add_position %}
                  <div class="product-list-item add{% unless block.settings.cover %} contain-image{% endunless %} add-size-{{- block.settings.add_size -}}" {{ block.shopify_attributes }} {%- if block.settings.min_height != empty -%}style="height: {{- block.settings.min_height -}}px"{%- endif -%}>

                    {% if block.settings.image %}
                      {{ block.settings.image | image_url: width: 1000 | image_tag: loading: 'lazy', class: 'add-image' }}
                    {% else %}
                      {{ 'product-2' | placeholder_svg_tag: 'add-image' }}
                    {% endif %}
                    <div class="add-text-wrap">
                      <div class="add-text-content">
                        {% if block.settings.button_text %}
                          <p>{{ block.settings.text }}</p>
                        {% endif %}
                        {% if block.settings.button_text %}
                          <a class="text-link underline" href="{{ block.settings.button_url }}">{{ block.settings.button_text }}</a>
                        {% endif %}
                      </div>
                    </div>
                  </div>
                {% endif %}

            {%- endcase -%}
          {%- endfor -%}
          <div class="product-list-item">
            {% render 'product-list-item', product: product %}
          </div>
        {% endfor %}  
      </div>
      {% case section.settings.pagination_settings %}
        {% when 'infinite' or 'click-to-load' %}
          <div id="AjaxinatePagination">
            {% if paginate.next %}
              <a class="button {{ section.settings.button_style }} full" href="{{ paginate.next.url }}">VIEW MORE</a>
            {% endif %}
          </div>
        {% when 'paginated' %}
          <div class="pagination">{{- paginate | default_pagination -}}</div>
      {% endcase %}
    {% endpaginate %}
  {% else %}
      {{ section.settings.no_product }}
  {% endif %}
  {% unless section.settings.full_width %}
  </div>
  {% endunless %}
</div>


<script>
  {% case section.settings.pagination_settings %}
    {% when 'infinite' %}
    document.addEventListener("DOMContentLoaded", function() {
      var endlessScroll = new Ajaxinate({
      });
    });
    {% when 'click-to-load' %}
    document.addEventListener("DOMContentLoaded", function() {
      var endlessScroll = new Ajaxinate({
        method: 'click'          
      });
    });
  {% endcase %}
</script>
{% render "filter" %}
{% schema %}
{
  "name": "t:sections.product_grid.name",
  "settings": [
    {
      "type": "range",
      "id": "item_per_row",
      "min": 1,
      "max": 5,
      "step": 1,
      "unit": "itm",
      "label": "t:sections.product_grid.columns_desktop",
      "default": 3
    },
    {
      "type": "range",
      "id": "item_show_row",
      "min": 1,
      "max": 5,
      "step": 1,
      "unit": "itm",
      "label": "t:sections.product_grid.rows_desktop",
      "default": 3,
      "info": "t:sections.product_grid.rows_desktop_info"
    },
    {
      "type": "select",
      "id": "item_per_row_mobile",
      "label": "t:sections.product_grid.columns_mobile",
      "default": "2",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ]
    },
    {
      "type": "range",
      "id": "product_gap",
      "min": 0,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "t:sections.product_grid.columns_spacing",
      "default": 0
    },
    {
      "type": "select",
      "id": "image_size",
      "label": "t:sections.all.img_size",
      "default": "two-three",
      "options": [
        {
          "value": "one-one",
          "label": "Square (1:1)"
        },
        {
          "value": "three-two",
          "label": "Landscape (3:2)"
        },
        {
          "value": "fout-three",
          "label": "Landscape (4:3)"
        },
        {
          "value": "sixteen-nine",
          "label": "Landscape (16:9)"
        },
        {
          "value": "two-three",
          "label": "Portrait (2:3)"
        },
        {
          "value": "three-four",
          "label": "Portrait (3:4)"
        },
        {
          "value": "nine-sixteen",
          "label": "Portrait (9:16)"
        }
      ]
    },
    {
      "type": "select",
      "id": "image_fit",
      "label": "t:sections.all.image_fit",
      "default": "contain",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.all.image_contain"
        },
        {
          "value": "cover",
          "label": "t:sections.all.image_cover"
        }
      ]
    },
    {
      "type": "select",
      "id": "image_pos",
      "label": "t:sections.all.image_position",
      "default": "center",
      "info": "t:sections.all.image_position_info",
      "options": [
        {
          "value": "top",
          "label": "t:sections.all.image_pos_top"
        },
        {
          "value": "center",
          "label": "t:sections.all.image_pos_center"
        },
        {
          "value": "bottom",
          "label": "t:sections.all.image_pos_bot"
        }
      ]
    },
    {
      "type": "select",
      "id": "pagination_settings",
      "label": "t:sections.all.pagination",
      "default": "paginated",
      "options": [
        {
          "value": "infinite",
          "label": "t:sections.all.infinite"
        },
        {
          "value": "click-to-load",
          "label": "t:sections.all.click_to_load"
        },
        {
          "value": "paginated",
          "label": "t:sections.all.paginated"
        }
      ]
    },
    {
      "type": "select",
      "id": "button_style",
      "options": [
        {
          "value": "model-1",
          "label": "t:settings_schema.typography.settings.colors.button_1_color_1"
        },
        {
          "value": "model-2",
          "label": "t:settings_schema.typography.settings.colors.button_2_color_1"
        },
        {
          "value": "model-3",
          "label": "t:settings_schema.typography.settings.colors.button_3_color_1"
        },
        {
          "value": "model-4",
          "label": "t:settings_schema.typography.settings.colors.button_4_color_1"
        }
      ],
      "label": "t:sections.all.button_style",
      "default": "model-3"
    },
    {
      "type": "text",
      "label": "t:sections.all.heading",
      "default": "Featured Products.",
      "id": "heading"
    },
    {
      "type": "color",
      "id": "title",
      "label": "t:sections.all.heading",
      "default": "#000000"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "t:sections.all.background_color",
      "default": "linear-gradient(180deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0) 100%)"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "t:sections.all.background_image"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.section_padding",
      "default": 0
    },
    {
      "type": "color",
      "id": "add_color",
      "label": "t:sections.all.text",
      "default": "#FFFFFF"
    },
    {
      "type": "text",
      "id": "no_product",
      "label": "No product in collection text",
      "info": "This message will display when there are no products in the chosen collection",
      "default": "This collection is currently empty of products."
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.all.make_section_full",
      "default": true
    },
    {
      "type": "range",
      "id": "tint_opacity",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Tint Opacity",
      "info": "Adjust gradient overlay that will be used for all promotions",
      "default": 50
    },
    {
      "type": "color",
      "id": "tint_color",
      "label": "Tint",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "add_font_size",
      "min": 12,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Add font size",
      "default": 48
    },
    {
      "type": "range",
      "id": "add_font_size_mobile",
      "min": 12,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Add font size",
      "default": 24
    }
  ],
  "blocks": [
    {
      "type": "add_add",
      "name": "t:sections.all.promotion",
      "settings": [
        {
          "type": "range",
          "id": "add_position",
          "min": 1,
          "max": 24,
          "step": 1,
          "unit": "pos",
          "label": "t:sections.all.promotion_pos",
          "info": "Choose the position where your promotion will be displayed in your collections.  Bear in mind the column count you have chosen for this product grid section to enhance your shop's appearance.  If the column count for both the product grid and promotion area is the same, specify a height (for example, 800) for the promotion to achieve the best impact. To optimize the mobile experience, the size of the promotion column will be restricted to a single column",
          "default": 3
        },
        {
          "type": "range",
          "id": "add_size",
          "min": 1,
          "max": 5,
          "step": 1,
          "unit": "clm",
          "label": "t:sections.product_grid.add_size",
          "info": "t:sections.product_grid.add_size_info",
          "default": 1
        },
        {
          "type": "text",
          "id": "min_height",
          "label": "t:sections.all.section_height",
          "info": "t:sections.product_grid.add_size_height"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.all.image"
        },
        {
          "type": "checkbox",
          "id": "cover",
          "label": "t:sections.product_grid.image_cover",
          "default": true
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.all.text",
          "default": "<p>Designed by People, for All People, by <strong>Stellar</strong></p>"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "t:sections.product_grid.link_text",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "t:sections.all.add_link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.product_grid.name"
    }
  ]
}
{% endschema %}