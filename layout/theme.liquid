<!doctype html>
  <html class="no-js" lang="{{ request.locale.iso_code }}">
    <head>
      <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width,initial-scale=1">
      <meta name="theme-color" content="">
      <link rel="canonical" href="{{ canonical_url }}">
    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}
    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>
    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}
    <link rel="canonical" href="{{ canonical_url }}">
    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>

    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    
    

    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
    /*swatche colors*/
    .product-option.color-options label {
      text-indent: -5000px;
      {% if settings.auto-width-on-of == "auto-width-of" %} 
            width: {{ settings.box_size_w }}px;
        {% else %}
            width: auto;
            padding: 0 calc({{ settings.box_size_h }}px / 2);
        {% endif %} 
    }
    .product-option label {
        min-width: {{ settings.box_size_w }}px;
        height: {{ settings.box_size_h }}px;
        line-height: {{ settings.box_size_h }}px;
        border: 1px solid #D9D9D9;
        display: inline-block;
        border-radius: {{ settings.box_radius }}%;
        text-align: center;
        overflow: hidden;
        margin-top: 5px;
        padding: 0 10px;
        position: relative;
    }
    .product-option label.disabled {
      opacity: 0.5;
    }
    .product-option input.disabled+label:after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom right, transparent calc(50% - 1px), #FB7D6D 0, #FB7D6D calc(50% + 1px), transparent 0);
    }
    .product-option input:checked+label {
      border: 1px solid var(--body-color);
    }
    {% assign swatch_lines = settings.swatches | split: ',' %}
    {% for line in swatch_lines %}
      {% assign color_value = line | split: ':' %}
      label[for="Color-{{ color_value[0] | strip }}"], 
      .product-list-colors.Color-{{ color_value[0] | strip }} {
        background-color: {{ color_value[1] | strip }};
      }
      label.Color-{{ color_value[0] | strip }}:before {
        background-color: {{ color_value[1] | strip }};
        content: "";
        width: 20px;
        height: 20px;
        margin: auto;
      }       
    {% endfor %}

    
    /**/
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      

      

      :root {
        
        --font-body-family: {{ settings.type_body_font.family }};
        --font-body-size: {{ settings.body_scale | divided_by: 100.0 }};
        /*title*/
        --font-title-family: {{ settings.type_header_font.family }};
        --font-title-size: {{ settings.heading_scale | divided_by : 100.0 }};
        /*sub-title*/
        --font-sub-title-family: {{ settings.sub_type_header_font.family }};
        --font-sub-title-size: {{ settings.sub_heading_scale | divided_by : 100.0 }};
        /*color*/
        --body-color: {{ settings.general_color }};
        /*button sizes*/
        --font-button-size: {{ settings.button_scale | divided_by : 100.0 }};
        /*button 1 renk*/
        --button-first-color : {{ settings.button_first_color }};
        --button-first-color_bg : {{ settings.button_first_color_bg }};
        /*button 2 renk*/
        --button-second-color : {{ settings.button_second_color }};
        --button-second-color_bg : {{ settings.button_second_color_bg }};
        /*button 3 renk*/
        --button-third-color : {{ settings.button_third_color }};
        --button-third-color_bg : {{ settings.button_third_color_bg }};
        --button-extra-color : {{ settings.button_extra_color }};
        --button-extra-color_bg : {{ settings.button_extra_color_bg }};
        /*menu fon size*/
        --font-menu-size: {{ settings.menu_scale | divided_by : 100.0 }};

        /*badges*/
        --badge-one-color : {{ settings.sale_badge_color }};
        --badge-two-color : {{ settings.second_badge_color }};
        --badge-three-color : {{ settings.third_badge_color }};

        /*listed product details*/
        --product-details-spaces: {{ settings.product_details_spaces }};
        

        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};
        --font-heading-family:  {{ settings.type_header_font.family }}, 
                                {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};
        
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --animation-duration: 1s;
      }
    {% endstyle %}

    {{ 'style.css' | asset_url | stylesheet_tag }}

    {% if settings.hide_them_all %}
      {% if customer.id == null %}
        {{ 'hide-all.css' | asset_url | stylesheet_tag }}
      {% endif %}
    {% endif %}
    {%- unless settings.type_body_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      {% comment %}theme-check-disable AssetPreload{% endcomment %}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
      {% comment %}theme-check-enable AssetPreload{% endcomment %}
    {%- endunless -%}
 

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>
  </head>

  <body>
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>
    {% if settings.show_cart_drawer %}
       {% unless request.page_type == 'cart' %}
        {% render 'cart-drawer' %}
       {% endunless %}
    {% endif %}
    
    {% sections 'custom-group' %}

    {% if request.page_type == 'collection' or request.page_type == 'search' %}
      
    {% endif %}
    <header class="site-header" id="site-header">
      {% sections 'header-group' %}
    </header>
    
    <main id="MainContent" class="main-content{% if settings.product-image-animation %} product-image-animation{% endif %}{% if settings.quick-look-animation %} quick-look-animation{% endif %}" role="main" tabindex="-1">
      {{ content_for_layout }} 
    </main>
    {% sections 'footer-group' %}
    
    <script>
     
      document.addEventListener('DOMContentLoaded', function() {
        var elements = document.querySelectorAll('.animation-fadeIn');
        elements.forEach(function(element) {
          element.setAttribute('data-animation', 'fadeIn');
        });
      });      
      const AnimateOnScroll = function ({ offset } = { offset: 10 }) {
        // Defines the top, bottom and sides of the screen
        const windowTop = (offset * window.innerHeight) / 100;
        const windowBottom = window.innerHeight - windowTop;
        const windowLeft = 0;
        const windowRight = window.innerWidth;
      
        this.start = (element) => {
          window.requestAnimationFrame(() => {
            // Set custom attributes
            element.style.animationDelay = element.dataset.animationDelay;
            element.style.animationDuration = element.dataset.animationDuration;
      
            // Start the animation by setting the class to animate
            element.classList.add(element.dataset.animation);
      
            // Set the element as animated
            element.dataset.animated = "true";
          });
        };
      
        this.inViewport = (element) => {
          // Get the element's boundingbox
          const elementRect = element.getBoundingClientRect();
          const elementTop =
            elementRect.top + parseInt(element.dataset.animationOffset) ||
            elementRect.top;
          const elementBottom =
            elementRect.bottom - parseInt(element.dataset.animationOffset) ||
            elementRect.bottom;
          const elementLeft = elementRect.left;
          const elementRight = elementRect.right;
      
          // Checks if the element is on the screen
          return (
            elementTop <= windowBottom &&
            elementBottom >= windowTop &&
            elementLeft <= windowRight &&
            elementRight >= windowLeft
          );
        };
      
        // Go through the array of elements, check if the element is on the screen and start animation
        this.verifyElementsInViewport = (els = elements) => {
          for (let i = 0, len = els.length; i < len; i++) {
            // Passa para o proximo laço se o elemento ja estiver animado
            if (els[i].dataset.animated) continue;
      
            this.inViewport(els[i]) && this.start(els[i]);
          }
        };
      
        // Get all elements to be animated
        this.getElements = () =>
          document.querySelectorAll("[data-animation]:not([data-animated])");
        // Update the list of elements to be animated
        this.update = () => {
          elements = this.getElements();
          elements && this.verifyElementsInViewport(elements);
        };
        // Start events
        window.addEventListener("load", this.update, false);
        window.addEventListener(
          "scroll",
          () => this.verifyElementsInViewport(elements),
          { passive: true }
        );
        window.addEventListener(
          "resize",
          () => this.verifyElementsInViewport(elements),
          { passive: true }
        );
      };
      
      // Initialize
      const options = {
        offset: 10 // percentage of the window
      };
      const animation = new AnimateOnScroll(options);
    </script>
    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
      };

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      };

      window.quickOrderListStrings = {
        itemsAdded: `{{ 'sections.quick_order_list.items_added.other' | t: quantity: '[quantity]' }}`,
        itemAdded: `{{ 'sections.quick_order_list.items_added.one' | t: quantity: '[quantity]' }}`,
        itemsRemoved: `{{ 'sections.quick_order_list.items_removed.other' | t: quantity: '[quantity]' }}`,
        itemRemoved: `{{ 'sections.quick_order_list.items_removed.one' | t: quantity: '[quantity]' }}`,
        viewCart: `{{- 'sections.quick_order_list.view_cart' | t -}}`,
        each: `{{- 'sections.quick_order_list.each' | t: money: '[money]' }}`,
      };

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
        countrySelectorSearchCount: `{{ "Country_results_count" count: '[count]' }}`,
      };
    </script>
  </body>
</html>
